plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'io.freefair.lombok' version '8.6'
    id 'edu.sc.seis.launch4j' version '3.0.6'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'ovh.astarivi.xboxlib'
version = '1.1'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// Dist option 1 (:ogx:distZip)
// Also serves as a development entrypoint (:ogx:build run)
application {
    mainClass = 'ovh.astarivi.xboxlib.Main'
}

// Dist option 2 (:ogx:shadowJar)
jar {
    manifest {
        attributes 'Main-Class': 'ovh.astarivi.xboxlib.Main'
    }
}

// Dist option 3  (:ogx:createExe)
launch4j {
    mainClassName = 'ovh.astarivi.xboxlib.Main'
    icon = "${projectDir}/src/main/resources/ovh/astarivi/xboxlib/res/icon.ico"
    libraryDir = "ogxrepacker"
    outfile = "OGXRepacker.exe"
    jreMinVersion = "17"
}

repositories {
    mavenCentral()
    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    // This repo has changed like 3 times in past. If anything breaks, this thing could be to blame.
    maven { url "https://cache-redirector.jetbrains.com/intellij-dependencies" }
}

configurations {
    antTask
}

dependencies {
    implementation project(':jxdvdfs')

    // GUI
    implementation 'com.formdev:flatlaf:3.4'
    implementation 'com.formdev:flatlaf-intellij-themes:3.4'
    implementation 'com.jgoodies:jgoodies-forms:1.9.0' // Yes I know this has a CVE, but it's a small one

    // Stuff from IntelliJ to make the GUI Designer work with Gradle
    implementation 'com.jetbrains.intellij.java:java-gui-forms-rt:233.14475.56'
    antTask 'com.jetbrains.intellij.java:java-compiler-ant-tasks:233.14475.56'

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.16.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.16.1'

    // Logger
    implementation 'org.tinylog:tinylog-api:2.7.0'
    runtimeOnly 'org.tinylog:tinylog-impl:2.7.0'
    runtimeOnly 'org.tinylog:slf4j-tinylog:2.7.0'

    implementation 'org.jetbrains:annotations:24.1.0'

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

// Wonderful little spaghetti to integrate IntelliJ Swing GUI designer into Gradle
task compileJava(type: JavaCompile, overwrite: true, dependsOn: configurations.runtimeClasspath.getTaskDependencyFromProjectDependency(true, 'jar')) {
    doLast {
        project.sourceSets.main.output.classesDirs.each { project.mkdir(it) }
        ant.taskdef name: 'javac2', classname: 'com.intellij.ant.Javac2', classpath: configurations.antTask.asPath
        ant.javac2 srcdir: project.sourceSets.main.java.srcDirs.join(':'),
                classpath: project.sourceSets.main.compileClasspath.asPath,
                destdir: project.sourceSets.main.output.classesDirs[0],
                source: sourceCompatibility,
                target: targetCompatibility,
                includeAntRuntime: false
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
